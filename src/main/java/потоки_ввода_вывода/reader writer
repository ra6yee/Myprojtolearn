Reader и Writer. Это два абстрактных класса, которые очень похожи на классы InputStream и OutputStream. Но в отличие от
 них, эти два класса работают с символами. Они читают символы и записывают символы. Они очень удобны при работе
 с текстовой информацией. Давай посмотрим, какие методы у них есть:



int read(char[] cbuf);
— метод сразу читает много символов в буфер (массив символов), пока буфер не заполнится или не закончатся символы там,
откуда он их читает.
Метод возвращает количество реально прочитанных символов (оно может быть меньше длины массива)

int read();
— метод читает один символ и возвращает его как результат. Результат расширяется до int, для красоты.
Если доступных символов нет, метод вернет «-1».

boolean ready();
— метод возвращает true если есть еще непрочитанные символы для методов read

void close();
— метод «закрывает» поток, вызывается после окончания работы с потоком.
Объект выполняет служебные операции, связанные с закрытием файла на диске и т.д.
Из потока больше нельзя читать данные.

— Оказывается, благодаря методу read(char[] cbuf) из Reader’а можно читать символы целыми блоками,
 а не по одному символу. Так и быстрее и удобнее.




void write(int c);
— метод записывает один символ. Тип int сужается до char, лишняя часть просто отбрасывается.

void write(char[] cbuff);
— метод записывает массив символов.

void write(String s);
— метод записывает строку. Она просто преобразовывается в массив символов и вызывается второй метод.

void flush();
— если есть данные, которые хранятся где-то внутри и еще не записаны, то они записываются.

void close();
— метод «закрывает» поток – вызывается после окончания работы с потоком.
Объект выполняет служебные операции, связанные с закрытием файла на диске и т.д. В поток больше нельзя писать данные,
 flush при этом вызывается автоматически.