
можно выделить два вида преобразования типов: расширение и сужение.

Расширение похоже на перекладывание из маленькой корзинки в большую – операция проходит незаметно и безболезненно.
Сужение типа – это перекладывание из большой корзинки в маленькую: места может не хватить, и что-то придётся выбросить.

Тут есть пара замечаний:

1. char такая же корзинка, как и short, но свободно перекладывать из одной в другую нельзя: при перекладывании значения
 из short в char, всегда будут теряться значения меньше 0.
 При перекладывании из char в short будут теряться значения больше 32-х тысяч.

2. При преобразовании из целых чисел в дробные могут отбрасываться самые младшие части числа. Но т.к. смысл дробного числа в том, чтобы хранить приблизительное значение, то такое присваивание разрешается.

— При сужении типа мы должны явно показать компилятору, что мы не ошиблись и отбрасывание части числа сделано намеренно. Для этого используется оператор приведения типа. Это имя типа в круглых скобочках.

— Вот как нужно присваивать переменные разных типов:

Код на Java	Описание
byte a = 115;
int b = a;	Расширение типа. Все отлично.
int c = 10000;
byte d = (byte) c;	Сужение типа. Нужно явно отбросить лишние байты.
int c = 10;
byte d = (byte) c;	Сужение типа. Нужно явно отбросить лишние байты, даже если они равны 0.
float f = 10000;
long l = (long) (f * f);
float f2 = l;
long l2 = (long) f2;	При присваивании к float, происходит расширение типа. При присваивании значения float к long, происходит сужение – необходимо приведение типа.
double d = 1;
float f = (float) d;
long l = (long) f;
int i = (int) l;
short s = (short) i;
byte b = (byte) s;	Сужение во всех операция присваивания, кроме первой строки, требует указания явного преобразования типа.
— Оператор приведения типа нужно указывать перед числом/переменной каждый раз, когда происходит отбрасывание части числа или сужение типа. Он действует только на число/переменную, которое идет непосредственно за ним.

Код на Java	Описание
float f = 10000;
long l = (long) f * f;	К типу long приводится только одна переменная из двух: умножение long и float дает float. Данный пример кода не будет скомпилирован.
float f = 10000;
long l = (long) (f * f);	Тут все выражение приводится к типу long. Этот пример кода будет скомпилирован.