String text = String.format("User = {name: %s, age: %d years, friend: %s, weight: %d kg.}",
user.getName(), user.getAge(), user.getFriends().get(0), user.getExtraInformation().getWeight())

System.out.println(text);

это работа стринг формат

В метод String.format первым параметром передается строка-шаблон, в которой, на местах, в которые мы хотим подставить
 значения, стоят специальные символы: %s, %d.

После строки-шаблона передаются параметры, значения которых и будут подставлены на место символов %s, %d.

Если нужно подставить строку мы пишем %s, если число — %d.

Вот тебе пример попроще:

Пример
String s = String.format("a = %d, b = %d, c = %d", 1, 4, 3);
Результат:
s будет равна «a = 1, b = 4, c = 3»
— Да, это очень удобно.

— А ведь еще можно делать и так:

Пример
int a = -1, b = 4, c = 3;
String template;
 if (a < 0)
  template = "Warning! a = %d, b = %d, c = %d";
 else
  template = "a = %d, b = %d, c = %d";

System.out.println(String.format(template, a, b, c) );
Результат вывода:
Warning! a = -1, b = 4, c = 3
— Гм. Действительно полезный метод, спасибо, Элли.

— Если ты хочешь использовать в методе format другие типы данных, то вот тебе таблица:

Обозначение	Тип
%s	String
%d	целое число: int, long, …
%f	вещественное число: float, double
%b	boolean
%c	char
%t	Date
%%	Символ %
На самом деле у этих параметров еще есть свои настройки, а у них свои.

в целом просто, сначала шаблон строки, потом данные для шаблона.
